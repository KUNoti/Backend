// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: update_event.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const updateEventByID = `-- name: UpdateEventByID :one
UPDATE events SET
title = COALESCE($1, title),
latitude = COALESCE($2, latitude),
longitude = COALESCE($3, longitude),
start_date = COALESCE($4, start_date),
end_date = COALESCE($5, end_date),
price = COALESCE($6, price),
tag = COALESCE($7, tag),
creator = COALESCE($8, creator),
detail = COALESCE($9, detail),
location_name = COALESCE($10, location_name),
need_regis = COALESCE($11, need_regis),
updated_at = CURRENT_TIMESTAMP


WHERE id = $12
RETURNING id, start_date, end_date, created_at, updated_at, title, latitude, longitude, price, image, detail, location_name, need_regis, tag, creator
`

type UpdateEventByIDParams struct {
	Title        pgtype.Text      `json:"title"`
	Latitude     pgtype.Float8    `json:"latitude"`
	Longitude    pgtype.Float8    `json:"longitude"`
	StartDate    pgtype.Timestamp `json:"start_date"`
	EndDate      pgtype.Timestamp `json:"end_date"`
	Price        pgtype.Float8    `json:"price"`
	Tag          pgtype.Text      `json:"tag"`
	Creator      pgtype.Int4      `json:"creator"`
	Detail       pgtype.Text      `json:"detail"`
	LocationName pgtype.Text      `json:"location_name"`
	NeedRegis    pgtype.Bool      `json:"need_regis"`
	ID           int32            `json:"id"`
}

// imgae
func (q *Queries) UpdateEventByID(ctx context.Context, arg UpdateEventByIDParams) (Event, error) {
	row := q.db.QueryRow(ctx, updateEventByID,
		arg.Title,
		arg.Latitude,
		arg.Longitude,
		arg.StartDate,
		arg.EndDate,
		arg.Price,
		arg.Tag,
		arg.Creator,
		arg.Detail,
		arg.LocationName,
		arg.NeedRegis,
		arg.ID,
	)
	var i Event
	err := row.Scan(
		&i.ID,
		&i.StartDate,
		&i.EndDate,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Title,
		&i.Latitude,
		&i.Longitude,
		&i.Price,
		&i.Image,
		&i.Detail,
		&i.LocationName,
		&i.NeedRegis,
		&i.Tag,
		&i.Creator,
	)
	return i, err
}

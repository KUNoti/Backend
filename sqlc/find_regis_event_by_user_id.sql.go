// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: find_regis_event_by_user_id.sql

package sqlc

import (
	"context"
)

const findRegisEventByUserID = `-- name: FindRegisEventByUserID :many
SELECT id, event_id, user_id, created_at, updated_at
FROM regis_events
WHERE user_id = $1
ORDER BY id DESC
`

func (q *Queries) FindRegisEventByUserID(ctx context.Context, userID int32) ([]RegisEvent, error) {
	rows, err := q.db.Query(ctx, findRegisEventByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []RegisEvent{}
	for rows.Next() {
		var i RegisEvent
		if err := rows.Scan(
			&i.ID,
			&i.EventID,
			&i.UserID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: find_user_that_regis.sql

package sqlc

import (
	"context"
)

const findUserThatRegis = `-- name: FindUserThatRegis :many
SELECT users.id, users.token
FROM regis_events
         JOIN users ON regis_events.user_id = users.id
WHERE regis_events.event_id = $1
`

type FindUserThatRegisRow struct {
	ID    int32  `json:"id"`
	Token string `json:"token"`
}

func (q *Queries) FindUserThatRegis(ctx context.Context, eventID int32) ([]FindUserThatRegisRow, error) {
	rows, err := q.db.Query(ctx, findUserThatRegis, eventID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []FindUserThatRegisRow{}
	for rows.Next() {
		var i FindUserThatRegisRow
		if err := rows.Scan(&i.ID, &i.Token); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

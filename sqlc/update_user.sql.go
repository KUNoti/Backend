// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: update_user.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const updateUserByID = `-- name: UpdateUserByID :one
UPDATE users SET
                 name = COALESCE($1, name),
                 social_id = COALESCE($2, social_id),
                 email = COALESCE($3, email),
                 profile_image = COALESCE($4, profile_image),
                 updated_at = CURRENT_TIMESTAMP
WHERE id = $5
RETURNING id, name, role, created_at, updated_at, email, profile_image, username, password, social_id
`

type UpdateUserByIDParams struct {
	Name         string      `json:"name"`
	SocialID     pgtype.Text `json:"social_id"`
	Email        string      `json:"email"`
	ProfileImage pgtype.Text `json:"profile_image"`
	ID           int32       `json:"id"`
}

func (q *Queries) UpdateUserByID(ctx context.Context, arg UpdateUserByIDParams) (User, error) {
	row := q.db.QueryRow(ctx, updateUserByID,
		arg.Name,
		arg.SocialID,
		arg.Email,
		arg.ProfileImage,
		arg.ID,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Role,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.ProfileImage,
		&i.Username,
		&i.Password,
		&i.SocialID,
	)
	return i, err
}

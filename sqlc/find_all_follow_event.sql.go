// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: find_all_follow_event.sql

package sqlc

import (
	"context"
)

const findAllFollowEvent = `-- name: FindAllFollowEvent :many
SELECT id, event_id, user_id, created_at, updated_at
FROM following_events
WHERE user_id = $1
ORDER BY id DESC
`

func (q *Queries) FindAllFollowEvent(ctx context.Context, userID int32) ([]FollowingEvent, error) {
	rows, err := q.db.Query(ctx, findAllFollowEvent, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []FollowingEvent{}
	for rows.Next() {
		var i FollowingEvent
		if err := rows.Scan(
			&i.ID,
			&i.EventID,
			&i.UserID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
